name: Check a new version
run-name: Check a new version by @${{ github.actor }}
on: workflow_dispatch

jobs:
  get_projects_config:
    name: Get projects config
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.convert-json.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Convert JSON to String
        id: convert-json
        run: |
          echo "result=$(cat ./projects.json | jq -c '.')" >> $GITHUB_OUTPUT

  check_new_version:
    name: Check a new version for ${{ matrix.project_name }}
    needs: get_projects_config
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.get_projects_config.outputs.config) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 📝 Get last version from the DockerHub registry
        id: get_last_version_from_dockerhub
        run: |
          version=$(curl -s -S "https://registry.hub.docker.com/v2/repositories/svetekllc/${{ matrix.project_name }}/tags/" | jq -r '.results[].name' | sort -V | tail -n1)
          echo "Last version is $version"
          echo "d_last_version=$version" >> "$GITHUB_OUTPUT"

      - name: 📝 Get last version from the GitHub repository
        id: get_last_version_from_github
        run: |
          version=$(curl -s "${{ matrix.git_api_url}}/${{ matrix.git_repository_name}}/${{ matrix.project_name}}/releases" | jq -r '.[].tag_name' | sort -V | tail -n 1)
          echo "Last version is $version"
          echo "g_last_version=$version" >> "$GITHUB_OUTPUT"

      - name: 🆚 Compare versions and set update flag
        id: compare_versions
        env:
          version_from_docker: ${{ steps.get_last_version_from_dockerhub.outputs.d_last_version }}
          version_from_git: ${{ steps.get_last_version_from_github.outputs.g_last_version }}
        run: |
          if [[ "$version_from_docker" != "$version_from_git" ]]
          then
            echo "Versions are different. Running build."
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.WORKFLOW_GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/svetek/node-tools/actions/workflows/WORKFLOW_ID/dispatches \
            -d '{"ref":"check_version_workflow","inputs":{"name":"Mona the Octocat","home":"San Francisco, CA"}}'
            
          else
            echo "Versions are the same. Skipping build."
          fi

