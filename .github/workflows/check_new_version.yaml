name: Check New Version
run-name: Check New Version by @${{ github.actor }}
on: workflow_dispatch
jobs:
  check_new_version:
    name: Check the new version
    runs-on: ubuntu-latest
    # outputs:
    #   is_update: ${{ steps.compare_versions.outputs.is_update }}
    #   version: ${{ steps.compare_versions.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get list projects
        run: |
          echo ${{ vars.PROJECTS }} | jq .

          
      # - name: 📝 Get last version from the DockerHub registry
      #   id: get_last_version_from_dockerhub
      #   run: |
      #     version=$(curl -s -S "https://registry.hub.docker.com/v2/repositories/svetekllc/lava/tags/" | jq -r '."results"[]["name"] | select(test("^v[0-9]+\\.[0-9]+\\.[0-9]+-provider$")) | gsub("-provider";"")' | sort -V | tail -n1)
      #     echo "Last version is $version"
      #     echo "d_last_version=$version" >> "$GITHUB_OUTPUT"

      # - name: 📝 Get last version from the GitHub repository
      #   id: get_last_version_from_github
      #   run: |
      #     version=$(curl -s "https://api.github.com/repos/lavanet/lava/releases" | jq -r '.[].tag_name' | sort -V | tail -n 1)
      #     echo "Last version is $version"
      #     echo "g_last_version=$version" >> "$GITHUB_OUTPUT"

      # - name: 🆚 Compare versions and set update flag
      #   id: compare_versions
      #   env:
      #     version_from_docker: ${{ steps.get_last_version_from_dockerhub.outputs.d_last_version }}
      #     version_from_git: ${{ steps.get_last_version_from_github.outputs.g_last_version }}
      #   run: |
      #     if [[ "$version_from_docker" != "$version_from_git" ]]
      #     then
      #       echo "Versions are different. Running build."
      #       echo "is_update=true" >> "$GITHUB_OUTPUT"
      #       echo "version=$version_from_git" >> "$GITHUB_OUTPUT"
      #     else
      #       echo "Versions are the same. Skipping build."
      #       echo "is_update=false" >> "$GITHUB_OUTPUT"
      #     fi
